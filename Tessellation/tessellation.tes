#version 430 core

uniform mat4 uViewMatrix;
uniform mat4 uProjectionMatrix;

layout(triangles, equal_spacing, ccw) in;

flat out vec3 VertexColor;

vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
    return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
}

void main()
{
	vec3 Position = interpolate3D(vec3(gl_in[0].gl_Position), vec3(gl_in[1].gl_Position), vec3(gl_in[2].gl_Position));
	VertexColor   = Position;

	gl_Position = vec4(uProjectionMatrix * uViewMatrix * vec4(Position, 1.f));
}